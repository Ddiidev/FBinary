;FUNCTIONS
;				CreateClass(), NameClass()
;
;AUTHOR			André Luiz
;
;ACTION
;	Manipulate binary without dependencies
;
;SYNTAX
;
;	$fileBin = ReadBin("PathFile") ; returns an array of char(ascii code)
;	
;	$bytes = [75, 105, 88] ;KiX
;	WriteBin("PathFile", $bytes) ; returns an array of char(ascii code)
;	WriteBin_append("PathFile", $bytes) ; returns an array of char(ascii code)
;
;VERSION		1.0.0.0
;DATE CREATED	30/08/2019
;DATE MODIFIED	30/08/2019
;
;PARAMETERS 	
;				Parameter 1
;				{THE TYPES DESCRIBED IN THEIR RESPECTIVE FUNCTION}
;
;				Parameter 2
;				{THE TYPES DESCRIBED IN THEIR RESPECTIVE FUNCTION}
;
;DEPENDENCIES 	KixWithClass.udf
;
;KIXTART VER	4.67.
;
;EXAMPLE:
;


; Read file in mode binary
public function ReadBin($path)
	dim $strLine[]
	$objFSO = CreateObject( "Scripting.FileSystemObject" )
	Set $objBinFile = $objFSO.GetFile( $path )
	Set $objBinStream = $objBinFile.OpenAsTextStream( 1, 0 )
	$i = -1
	
	redim $strLine[len($objBinStream.ReadAll())]
	
	$objBinStream.close()
	set $objBinStream = $objBinFile.OpenAsTextStream( 1, 0 )
	
	Do
		$i = $i + 1
		$strLine[$i] = Asc( $objBinStream.Read(1) )
	Loop Until $objBinStream.AtEndOfStream
	
	$ReadBin = $strLine
endfunction

; WriteBin Writes an array of char(ascii code) to the binary file.
public sub WriteBin($path, $ArrayByte)
	
	$objFSO  = CreateObject( "Scripting.FileSystemObject" )
	Set $objFile = $objFSO.CreateTextFile( $path, 0, 0 )
	
	For $i = 0 To UBound( $ArrayByte )
		$objFile.Write( Chr( $ArrayByte[$i] ))
	Next
	
	$objFile.Close()
	
	$objShell  = CreateObject( "Shell.Application" )
	Set $objParent = $objShell.NameSpace( $objFSO.GetParentFolderName( $objFSO.GetAbsolutePathName( $path ) ) )
	Set $objFile   = $objParent.ParseName( $path )
	$objFile.ModifyDate  = Date() & " " & Time()
	Set $objFile   = Nothing
	Set $objFSO    = Nothing
	Set $objShell  = Nothing

endsub

; WriteBin_append Write an array of char(ascii code) at the end of the binary file.
public sub WriteBin_append($file, $ArrayByte)

	$objFSO  = CreateObject( "Scripting.FileSystemObject" )
	Set $objBinFile = $objFSO.GetFile( $file )
	Set $objFile = $objBinFile.OpenAsTextStream( 8, 0)
	
	For $i = 0 To UBound( $ArrayByte )
		$objFile.Write( Chr( $ArrayByte[$i] ))
	Next
	
	$objFile.Close()
	$objBinFile.Close()

endsub